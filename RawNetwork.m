%The following function trains and test a network for raw image input
function [AccuracyTrainRaw, AccuracyTestRaw] = RawNetwork(imageDataset)
    %% Seperate the data for training and testing
    %seperate the images, 90% for training
    [ImagesTrain, ImagesTest] = splitEachLabel(imageDataset, 0.9, 'randomized');
    
    %% Set up the network to train with
    %define the layers
    layersRaw = [
        imageInputLayer([524 524 3])...
        batchNormalizationLayer ...
        fullyConnectedLayer(32) ...
        batchNormalizationLayer ...
        fullyConnectedLayer(8) ...
        batchNormalizationLayer ...
        fullyConnectedLayer(2) ...
        batchNormalizationLayer ...
        reluLayer ...
        classificationLayer];
    
    % Setting max epochs to 100
    % Mini-batch size of 32 selected
    % Show plots while learning
    options = trainingOptions('sgdm', ...
        MaxEpochs = 100,...
        InitialLearnRate = 2e-3, ...
        MiniBatchSize = 32, ...
        Verbose = false, ...
        Plots = 'training-progress');
    
    %Train the network
    [netRaw, netRawInfo] = trainNetwork(ImagesTrain,layersRaw,options);

    %% Check accuracy
    % Get the training accuracy
    AccuracyTrainRaw = netRawInfo.TrainingAccuracy(end);
    
    % Get the testing accuracy
    NetworkPredictRaw = classify(netRaw, ImagesTest);
    LabelTestRaw = ImagesTest.Labels;

    AccuracyTestRaw = sum(NetworkPredictRaw == LabelTestRaw)/numel(LabelTestRaw);

end